def gitShortRev() {
    def gitCommit = ""
    def proc = "git rev-parse --short HEAD".execute()
    proc.in.eachLine { line -> gitCommit = line }
    proc.err.eachLine { line -> println line }
    proc.waitFor()
    return gitCommit
}

allprojects {
    ext.COMPILE_SDK_VERSION = 30
    ext.MIN_SDK_VERSION = 14
    ext.TARGET_SDK_VERSION = 28
    ext.VERSION_CODE = 1

    if ("${System.env.CI}".equalsIgnoreCase("true")) {
        ext.VERSION_NAME = System.getenv("GITHUB_REF_SLUG")
    } else {
        ext.VERSION_NAME = "1.0.4"
    }

    if ("${System.env.PUBLISH_RELEASE}".equalsIgnoreCase("true")) {
        ext.VERSION_SUFFIX = ""
    } else if ("${System.env.CI}".equalsIgnoreCase("true")) {
        ext.VERSION_SUFFIX = "-${System.env.GITHUB_SHA_SHORT}-SNAPSHOT"
    } else {
//        ext.VERSION_SUFFIX = "-${gitShortRev()}-SNAPSHOT"
        ext.VERSION_SUFFIX = ""
    }
    ext.ARTIFACT_VERSION = ext.VERSION_NAME + ext.VERSION_SUFFIX
    ext.TEST_HOST_APP_APPLICATION_ID = 'com.tencent.shadow.test.hostapp'
    ext.SAMPLE_HOST_APP_APPLICATION_ID = 'com.tencent.shadow.sample.host'
    repositories {
        google()
        jcenter()
        Properties properties = new Properties()
        def propertiesFile = project.rootProject.file('local.properties')
        if (propertiesFile.exists()) {
            properties.load(propertiesFile.newDataInputStream())

            if ("${properties.getProperty('gpr.local')}".equalsIgnoreCase('true')) {
                def user = properties.getProperty('gpr.user')
                def key = properties.getProperty('gpr.key')
                maven {
                    name = "GitHubPackages"
                    credentials {
                        username = user
                        password = key
                    }
                    url "https://maven.pkg.github.com/${user}/shadow"
                }

            }

        }
    }
}
